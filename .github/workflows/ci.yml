name: ci

on:
  push:
    tags:
      - "v*"
    branches:
      - "**"
    paths:
      - ".github/workflows/ci.yml"
      - "3rdparty/include/**"
      - "MaaDeps/**"
      - "include/**"
      - "source/**"
      - "sample/**"
      - "cmake/**"
      - "CMakeLists.txt"
      - "*.sln"

  pull_request:
    branches:
      - "**"
    paths:
      - ".github/workflows/ci.yml"
      - "3rdparty/include/**"
      - "MaaDeps/**"
      - "include/**"
      - "source/**"
      - "sample/**"
      - "cmake/**"
      - "CMakeLists.txt"
      - "*.sln"
  workflow_dispatch:

jobs:
  meta:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.set_tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v3
      - id: set_tag
        run: |
          echo tag=$(git describe --tags --match "v*" ${{ github.ref }} || git rev-parse --short HEAD) | tee -a $GITHUB_OUTPUT

  windows:
    needs: meta
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [aarch64, x86_64]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      # Download host arch tools for Thrift of CustomThriftController
      - name: Download host tools from MaaDeps
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 maadeps-download.py x64-windows

      - name: Bootstrap MaaDeps
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 maadeps-download.py ${{ matrix.arch == 'x86_64' && 'x64' || 'arm64' }}-windows

      - name: Build MAA
        run: |
          cmake --preset "${{ matrix.arch == 'x86_64' && 'MSVC 2022' || 'MSVC 2022 ARM' }}" -DMAADEPS_TRIPLET="maa-${{ matrix.arch == 'x86_64' && 'x64' || 'arm64' }}-windows"

          cmake --build build --preset "${{ matrix.arch == 'x86_64' && 'MSVC 2022' || 'MSVC 2022 ARM' }} - Release"
          cmake --install build --prefix install

      - name: Remove msvc-debug
        shell: bash
        run: |
          rm -rf install/bin/msvc-debug

      - name: Copy docs
        shell: bash
        run: |
          cp -r docs install

      - uses: actions/upload-artifact@v3
        with:
          name: MAA-win-${{ matrix.arch }}
          path: "install"

  ubuntu:
    needs: meta
    runs-on: ubuntu-latest
    container: archlinux:base-devel
    strategy:
      matrix:
        arch: [aarch64, x86_64]

    steps:
      # maybe should explicitly update some pkg instead of all?
      - name: Update system
        run: |
          pacman -Syu --noconfirm

      - name: Install dep
        run: |
          pacman -Sy
          pacman -S --noconfirm cmake python ccache ninja git

      # https://github.com/MaaAssistantArknights/MaaFramework/actions/runs/5643408179/job/15285186255
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install cross compile toolchains
        if: ${{ matrix.arch != 'x86_64' }}
        run: |
          pacman -Sy
          pacman -S --noconfirm aarch64-linux-gnu-gcc

      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          remove_stale_cache: false

      # Download host arch tools for Thrift of CustomThriftController
      - name: Download host tools from MaaDeps
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 maadeps-download.py x64-linux

      - name: Bootstrap MaaDeps
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 maadeps-download.py ${{ matrix.arch == 'x86_64' && 'x64' || 'arm64' }}-linux

      - name: Build MAA
        env:
          CC: ${{ matrix.arch == 'x86_64' && 'ccache gcc' || 'ccache aarch64-linux-gnu-gcc' }}
          CXX: ${{ matrix.arch == 'x86_64' && 'ccache g++' || 'ccache aarch64-linux-gnu-g++' }}
        run: |
          cmake --preset 'NinjaMulti' \
            -DMAADEPS_TRIPLET='maa-${{ matrix.arch == 'x86_64' && 'x64' || 'arm64' }}-linux'

          cmake --build build --preset 'NinjaMulti - Release'
          cmake --install build --prefix install

      - name: Copy docs
        run: |
          cp -r docs install

      - uses: actions/upload-artifact@v3
        with:
          name: MAA-linux-${{ matrix.arch }}
          path: "install"

  macos:
    needs: meta
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [aarch64, x86_64]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install dep
        run: |
          brew install cmake python ninja
        # ccache?

      - name: Download fmtlib
        run: |
          sh 3rdparty/fetch-fmt.sh

      - name: Install compiler
        run: |
          brew install llvm
        # 16

      # Download host arch tools for Thrift of CustomThriftController
      - name: Download host tools from MaaDeps
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 maadeps-download.py x64-osx

      - name: Bootstrap MaaDeps
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 maadeps-download.py ${{ matrix.arch == 'x86_64' && 'x64' || 'arm64' }}-osx

      - name: Build MAA
        env:
          CC: "/usr/local/opt/llvm/bin/clang"
          CXX: "/usr/local/opt/llvm/bin/clang++"
        run: |
          cmake --preset 'NinjaMulti' \
            -DMAADEPS_TRIPLET='maa-${{ matrix.arch == 'x86_64' && 'x64' || 'arm64' }}-osx'

          cmake --build build --preset 'NinjaMulti - Release'
          cmake --install build --prefix install

      - name: Copy docs
        run: |
          cp -r docs install

      - uses: actions/upload-artifact@v3
        with:
          name: MAA-macos-${{ matrix.arch }}
          path: "install"

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [meta, windows, ubuntu, macos]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v3
        with:
          path: assets

      - run: |
          cd assets
          for f in *; do
            (cd $f && zip -r ../$f-${{ needs.meta.outputs.tag }}.zip .)
          done

      - uses: softprops/action-gh-release@v1
        with:
          files: assets/*.zip
          tag_name: ${{ needs.meta.outputs.tag }}
